<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>mx.umb</groupId>
		<artifactId>dev</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<groupId>mx.umb</groupId>
	<artifactId>pattern</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>pattern</name>
	<url>http://maven.apache.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>


			<plugin>
				<groupId>com.github.wvengen</groupId>
				<artifactId>proguard-maven-plugin</artifactId>
				<version>2.0.10</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>proguard</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<injar>${project.artifactId}-${project.version}.jar</injar>
					<outjar>${project.artifactId}-${project.version}-OFS.jar</outjar>
					<maxMemory>1024m</maxMemory>
					<proguardInclude>${basedir}/proguard.conf</proguardInclude>

					<!-- Now exclude all modules that are embedded in the jar, so that ProGuard 
						won't see redefinition of each single class. You don't have to write down 
						your main module. -->
					<!-- <exclusions> -->
					<!-- <exclusion> -->
					<!-- <groupId>com.yourcompany</groupId> -->
					<!-- <artifactId>data</artifactId> -->
					<!-- </exclusion> -->
					<!-- </exclusions> -->
					<libs>
						<lib>${java.home}/lib/rt.jar</lib>
					</libs>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
